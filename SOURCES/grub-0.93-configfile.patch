--- grub-0.93/stage2/asm.S.config	2002-12-02 18:18:56.000000000 -0500
+++ grub-0.93/stage2/asm.S	2002-12-28 22:01:24.000000000 -0500
@@ -97,7 +97,7 @@
 	.string VERSION
 VARIABLE(config_file)
 #ifndef STAGE1_5
-	.string "/boot/grub/menu.lst"
+	.string "/boot/grub/grub.conf"
 #else   /* STAGE1_5 */
 	.long	0xffffffff
 	.string "/boot/grub/stage2"
--- grub-0.93/stage2/builtins.c.config	2002-12-03 23:41:57.000000000 -0500
+++ grub-0.93/stage2/builtins.c	2002-12-28 22:01:24.000000000 -0500
@@ -3838,7 +3838,7 @@
 
   /* The prefix was determined.  */
   grub_sprintf (stage2, "%s%s", prefix, "/stage2");
-  grub_sprintf (config_filename, "%s%s", prefix, "/menu.lst");
+  grub_sprintf (config_filename, "%s%s", prefix, "/grub.conf");
   *real_config_filename = 0;
 
   /* Check if stage2 exists.  */
--- grub-0.93/grub/asmstub.c.config	2002-12-02 18:20:45.000000000 -0500
+++ grub-0.93/grub/asmstub.c	2002-12-28 22:01:24.000000000 -0500
@@ -71,7 +71,7 @@
 unsigned long boot_drive = 0;
 int saved_entryno = 0;
 char version_string[] = VERSION;
-char config_file[128] = "/boot/grub/menu.lst"; /* FIXME: arbitrary */
+char config_file[128] = "/boot/grub/grub.conf"; /* FIXME: arbitrary */
 unsigned long linux_text_len = 0;
 char *linux_data_tmp_addr = 0;
 char *linux_data_real_addr = 0;
--- grub-0.93/docs/grub.8.config	2002-12-07 22:17:59.000000000 -0500
+++ grub-0.93/docs/grub.8	2002-12-28 22:01:24.000000000 -0500
@@ -15,7 +15,7 @@
 specify stage2 boot_drive [default=0x0]
 .TP
 \fB\-\-config\-file\fR=\fIFILE\fR
-specify stage2 config_file [default=/boot/grub/menu.lst]
+specify stage2 config_file [default=/boot/grub/grub.conf]
 .TP
 \fB\-\-device\-map\fR=\fIFILE\fR
 use the device map file FILE
--- grub-0.93/docs/grub.texi.config	2002-12-02 17:35:28.000000000 -0500
+++ grub-0.93/docs/grub.texi	2002-12-28 22:01:24.000000000 -0500
@@ -989,7 +989,7 @@
 keys) that will do everything to boot an OS.
 
 To enable the menu, you need a configuration file,
-@file{menu.lst} under the boot directory. We'll analyze an example
+@file{grub.conf} under the boot directory. We'll analyze an example
 file.
 
 The file first contains some general settings, the menu interface
@@ -1596,8 +1596,8 @@
 
 An absolute file name resembles a Unix absolute file name, using
 @samp{/} for the directory separator (not @samp{\} as in DOS). One
-example is @samp{(hd0,0)/boot/grub/menu.lst}. This means the file
-@file{/boot/grub/menu.lst} in the first partition of the first hard
+example is @samp{(hd0,0)/boot/grub/grub.conf}. This means the file
+@file{/boot/grub/grub.conf} in the first partition of the first hard
 disk. If you omit the device name in an absolute file name, GRUB uses
 GRUB's @dfn{root device} implicitly. So if you set the root device to,
 say, @samp{(hd1,0)} by the command @command{root} (@pxref{root}), then
@@ -3249,7 +3249,7 @@
 
 @item --config-file=@var{file}
 Read the configuration file @var{file} instead of
-@file{/boot/grub/menu.lst}. The format is the same as the normal GRUB
+@file{/boot/grub/grub.conf}. The format is the same as the normal GRUB
 syntax. See @ref{Filesystem}, for more information.
 
 @item --boot-drive=@var{drive}
